% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/0_ifLen.R
\name{ifLet}
\alias{ifLet}
\title{IfLet macro}
\usage{
ifLet(sym_str = stop("sym_str not supplied"), x = stop("x not supplied"),
  body1 = stop("body1 not supplied"), body2 = { })
}
\arguments{
\item{sym_str}{a string that will be converted to a symbol to hold value of \code{x}}

\item{x}{the predicate to be evalueated, and to be assigned to a temporary variable as described in \code{sym_str}}

\item{body1}{expression to be evaluated when the temporary variable is TRUE.}

\item{body2}{expression to be evaluated when the temporary variable is FALSE.}
}
\description{
Eval expression x, assign it to a variable, and if that is TRUE, continue
to eval expression1, otherwise eval expression2. Inspired by the clojure
\code{if-let} macro.
}
\examples{
ifLet("..temp..", TRUE, {print(paste("true.", as.character(..temp..)))},
		{print(paste("false.", as.character(..temp..)))})
}
\author{
kaiyin
}

